@{
    Layout = null;

    var str_SchedulDate = ViewBag.SchedulDate;
    var str_GroupId = ViewBag.GroupId;
    var str_SchedulTime = ViewBag.SchedulTime;
}
<head>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Resourse/My97DatePicker/WdatePicker.js"></script>
</head>
<body style="background-color:#FFCC99;">
    <div class="navbar navbar-inverse navbar-fixed-top" style="background-color:#FFCC99">
        <div class="container">
            <div class="navbar-header">
                <div id="DivTitle" class="navbar-brand" style="font-family:'Microsoft YaHei UI';font-size:30px;color:#FFFFFF;">血液净化中心</div>
            </div>
        </div>
    </div>
    <div id="divTableShow" class="container body-content" style="background-color:#FFFFCC;">
        @{Html.RenderAction("SchedulSignInView", "Schedul", new { SchedulDate = str_SchedulDate, GroupId = str_GroupId, SchedulTime = str_SchedulTime });}
    </div>
    <div style="display:block"><input id="txt_IDCard" onchange="SignIn();" /></div>
    <object classid="clsid:5EB842AE-5C49-4FD8-8CE9-77D4AF9FD4FF" id="IdrControl1" style="display:none;" />
</body>

<script type="text/javascript">
    function SignIn() {
        isReading = true;
        $.ajax({
            type: "post",
            url: "/Schedul/SignInIDCard",
            data: {
                "IDCard": $('#txt_IDCard').val(),
                "GroupId": @str_GroupId
            },
            //dataType: "json",
            async: true,
            traditional: false,
            success: function (data) {
                alert("签到成功！");
                location.reload(true);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("签到失败：" + errorThrown);
            }
        });
    }
    function updateTime() {
        var timestamp = new Date();
        document.getElementById("DivTitle").innerText = '血液净化中心 - ' + timestamp.toLocaleString();
    }
    function refresh() {
        location.reload(true);
    }
    function change(table) {
        for (x = 0; x < 6; x++) {
            var row = table.insertRow(table.rows.length);
            for (j = 0; j < table.rows[0].cells.length; j++) {
                var cell = row.insertCell(j);
                cell.height = "24px";
                cell.innerHTML = table.rows[0].cells[j].innerHTML;
            }
            table.deleteRow(0);
        }
    }
    function tableInterval() {
        var table = document.getElementById("SchedulSignInViews");
        change(table);
    }
    setInterval('tableInterval()', 3000);
    setInterval(refresh, 12000);
    updateTime();
    setInterval(updateTime, 1000);
    setInterval(Idcard, 1000);
    var isReading = true;
    var PortOpened = 0;
    var CpuCardFound = 0;
    function Idcard() {
        var result;
        var cardsn;
        if (isReading)
            return;
        try {
            isReading = true;
            var ax = new ActiveXObject("IDRCONTROL.IdrControlCtrl.1");
            //    alert("已安装");
        }
        catch (e) {
            alert("控件未安装");
            isReading = false;
        }

        //注意：第一个参数为对应的设备端口，USB型为1001，串口型为1至16
        result = IdrControl1.ReadCard("2", "d:\\test\\test.jpg");
        //	result=IdrControl1.ReadCard("1001","");
        if (result == 1) {
            //document.all.oTable.rows(2).cells(1).innerText = IdrControl1.GetName();
            //document.all.oTable.rows(3).cells(1).innerText = IdrControl1.GetFolk();
            //document.all.oTable.rows(4).cells(1).innerText = IdrControl1.GetSex();
            //document.all.oTable.rows(5).cells(1).innerText = IdrControl1.GetBirthYear() + "年" + IdrControl1.GetBirthMonth() + "月" + IdrControl1.GetBirthDay() + "日";
            cardsn = IdrControl1.GetCode();
            //document.all.oTable.rows(6).cells(1).innerText = cardsn;
            //document.all.oTable.rows(7).cells(1).innerText = IdrControl1.GetAddress();
            //document.all.oTable.rows(8).cells(1).innerText = IdrControl1.GetAgency();
            //document.all.oTable.rows(9).cells(1).innerText = IdrControl1.GetValid();
            //document.all.oTable.rows(10).cells(1).innerText = IdrControl1.GetCardPhotobuf();
            //document.all.oTable.rows(11).cells(1).innerText = IdrControl1.GetSAMID();
            //document.all.oTable.rows(12).cells(1).innerText = IdrControl1.GetIDCardSN();
            $('#txt_IDCard').val(cardsn + "");

            //document.all.notbook.src = "pic.htm";

            //alert(IdrControl1.GetSexN());
            //alert(IdrControl1.GetFolkN());

            isReading = false;
        }
        else {
            if (result == -1)
                alert("端口初始化失败！");
            if (result == -2)
                alert("请重新将卡片放到读卡器上！");
            if (result == -3)
                alert("读取数据失败！");
            if (result == -4)
                alert("生成照片文件失败，请检查设定路径和磁盘空间！");
            isReading = false;
        }
    }

    function ICcard() {
        var result;

        //注意：参数为对应的设备端口，iDR210为8159，iDR200 USB型为1001，iDR200串口型为1至16
        result = IdrControl1.ReadICCard("8159");
        if (result == 1) {
            $('#txt_IDCard').val(IdrControl1.GetICCardSN()+'');
        }
        else {
            if (result == -1)
                alert("端口初始化失败！");
            if (result == -2)
                alert("读IC卡失败");
        }
    }


    function Picflesh() {
        document.all.notbook.src = "pic.htm";
    }

    function FindCPUCard() {
        PortOpened = IdrControl1.InitComm(1001);
        CpuCardFound = 0;
        if (PortOpened != 1) {

            IdrControl1.CloseComm();
            alert("端口初始化失败！");
            PortOpened = 0;
            return;
        }


        CpuCardFound = IdrControl1.FindICCard();
        //document.all.oTable.rows(14).cells(1).innerText = "找到卡类型：" + CpuCardFound;

        if (CpuCardFound0 == 0) {
            IdrControl1.CloseComm();
            alert("未找到卡！");
            CpuCardFound = 0;
            return;
        }
        if (CpuCardFound0 > 3) {
            IdrControl1.CloseComm();
            alert("找卡失败！");
            CpuCardFound = 0;
            return;
        }
    }

    function ReadSDCard() {
        if (CpuCardFound != 2) {
            alert("请先找CPU卡！");
            CpuCardFound = 0;
            return;
        }

        result = IdrControl1.ReadCitizenCard();

        if (result == 1) {
            //document.all.oTable.rows(16).cells(1).innerText = IdrControl1.GetCityCardNO();
            //document.all.oTable.rows(17).cells(1).innerText = IdrControl1.GetCityCardName();
            //document.all.oTable.rows(18).cells(1).innerText = IdrControl1.GetCityCardIDType();
            //document.all.oTable.rows(19).cells(1).innerText = IdrControl1.GetCityCardIDCode();
            //document.all.oTable.rows(20).cells(1).innerText = IdrControl1.GetCityCardAppInfo();
        }
        else
            if (result == -1)
                alert("端口初始化失败！");
        if (result == -2)
            alert("找CPU卡失败！");
        if (result == -3)
            alert("读市民卡失败！");
    }

    function APDU_CMD() {
        if (CpuCardFound != 2) {
            alert("请先找CPU卡！");
            CpuCardFound = 0;
            return;
        }

        //alert(document.form1.apdustr.value);
        //document.all.oTable.rows(22).cells(1).innerText = IdrControl1.Routon_APDU(document.form1.apdustr.value);

    }



</script>
